//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataContracts
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PROMETHEUS_DBEntities : DbContext
    {
        public PROMETHEUS_DBEntities()
            : base("name=PROMETHEUS_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Auditoria> Auditoria { get; set; }
        public virtual DbSet<Clases> Clases { get; set; }
        public virtual DbSet<ComentariosEventos> ComentariosEventos { get; set; }
        public virtual DbSet<ComentariosNoticias> ComentariosNoticias { get; set; }
        public virtual DbSet<Ejercicios> Ejercicios { get; set; }
        public virtual DbSet<Eventos> Eventos { get; set; }
        public virtual DbSet<HistorialMedico> HistorialMedico { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<Medidas> Medidas { get; set; }
        public virtual DbSet<Mensaje> Mensaje { get; set; }
        public virtual DbSet<Noticias> Noticias { get; set; }
        public virtual DbSet<Notificaciones> Notificaciones { get; set; }
        public virtual DbSet<Ofertas> Ofertas { get; set; }
        public virtual DbSet<PagosRealizados> PagosRealizados { get; set; }
        public virtual DbSet<PlieguesHombres> PlieguesHombres { get; set; }
        public virtual DbSet<PlieguesMujeres> PlieguesMujeres { get; set; }
        public virtual DbSet<referenciaHorarios_referenciaClases> referenciaHorarios_referenciaClases { get; set; }
        public virtual DbSet<referenciaRutinas_referenciaEjercicios> referenciaRutinas_referenciaEjercicios { get; set; }
        public virtual DbSet<referenciaUsuarios_referenciaEventos> referenciaUsuarios_referenciaEventos { get; set; }
        public virtual DbSet<referenciaUsuarios_referenciaNotificaciones> referenciaUsuarios_referenciaNotificaciones { get; set; }
        public virtual DbSet<referenciaUsuarios_referenciaOfertas> referenciaUsuarios_referenciaOfertas { get; set; }
        public virtual DbSet<Rutinas> Rutinas { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<VistaTablaHistorialPlieguesHombres> VistaTablaHistorialPlieguesHombres { get; set; }
        public virtual DbSet<VistaTablaHistorialPlieguesMujeres> VistaTablaHistorialPlieguesMujeres { get; set; }
    
        public virtual int agregarImagenEventos(Nullable<int> id, byte[] img)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarImagenEventos", idParameter, imgParameter);
        }
    
        public virtual int agregarImagenNoticias(Nullable<int> id, byte[] img)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarImagenNoticias", idParameter, imgParameter);
        }
    
        public virtual int agregarImagenOfertas(Nullable<int> id, byte[] img)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarImagenOfertas", idParameter, imgParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BuscarIdPorCedula(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BuscarIdPorCedula", cedulaParameter);
        }
    
        public virtual int deshabilitarUsuario(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deshabilitarUsuario", iDParameter);
        }
    
        public virtual int eliminarClases(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarClases", iDParameter);
        }
    
        public virtual int eliminarComentariosEventos(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarComentariosEventos", iDParameter);
        }
    
        public virtual int eliminarComentariosNoticias(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarComentariosNoticias", iDParameter);
        }
    
        public virtual int eliminarEjercicios(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarEjercicios", iDParameter);
        }
    
        public virtual int eliminarEventos(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarEventos", iDParameter);
        }
    
        public virtual int eliminarHistorialMedico(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarHistorialMedico", iDParameter);
        }
    
        public virtual int eliminarHorarios(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarHorarios", iDParameter);
        }
    
        public virtual int eliminarMedidas(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarMedidas", iDParameter);
        }
    
        public virtual int eliminarMensaje(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarMensaje", iDParameter);
        }
    
        public virtual int eliminarNoticias(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarNoticias", iDParameter);
        }
    
        public virtual int eliminarNotificaciones(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarNotificaciones", iDParameter);
        }
    
        public virtual int eliminarOfertas(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarOfertas", iDParameter);
        }
    
        public virtual int eliminarPagoRealizado(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarPagoRealizado", iDParameter);
        }
    
        public virtual int eliminarPlieguesHombres(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarPlieguesHombres", iDParameter);
        }
    
        public virtual int eliminarPlieguesMujeres(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarPlieguesMujeres", iDParameter);
        }
    
        public virtual int eliminarReferenciaHorarios_ReferenciaClases(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarReferenciaHorarios_ReferenciaClases", iDParameter);
        }
    
        public virtual int eliminarReferenciaRutinas_referenciaEjercicios(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarReferenciaRutinas_referenciaEjercicios", iDParameter);
        }
    
        public virtual int eliminarReferenciaUsuarios_ReferenciaNotificaciones(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarReferenciaUsuarios_ReferenciaNotificaciones", iDParameter);
        }
    
        public virtual int eliminarReferenciaUsuarios_referenciaOfertas(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarReferenciaUsuarios_referenciaOfertas", iDParameter);
        }
    
        public virtual int eliminarRutina(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarRutina", iDParameter);
        }
    
        public virtual int habilitarUsuario(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("habilitarUsuario", iDParameter);
        }
    
        public virtual int insertClases(string nombre, string dia, Nullable<System.DateTime> horaInicio, Nullable<System.DateTime> horaFin)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var diaParameter = dia != null ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(string));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("horaInicio", horaInicio) :
                new ObjectParameter("horaInicio", typeof(System.DateTime));
    
            var horaFinParameter = horaFin.HasValue ?
                new ObjectParameter("horaFin", horaFin) :
                new ObjectParameter("horaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertClases", nombreParameter, diaParameter, horaInicioParameter, horaFinParameter);
        }
    
        public virtual int insertComentariosEventos(string mensaje, Nullable<System.DateTime> fecha, Nullable<int> iDUsuario, Nullable<int> iDEvento)
        {
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDEventoParameter = iDEvento.HasValue ?
                new ObjectParameter("IDEvento", iDEvento) :
                new ObjectParameter("IDEvento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertComentariosEventos", mensajeParameter, fechaParameter, iDUsuarioParameter, iDEventoParameter);
        }
    
        public virtual int insertComentariosNoticias(string mensaje, Nullable<System.DateTime> fecha, Nullable<int> iDUsuario, Nullable<int> iDNoticia)
        {
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDNoticiaParameter = iDNoticia.HasValue ?
                new ObjectParameter("IDNoticia", iDNoticia) :
                new ObjectParameter("IDNoticia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertComentariosNoticias", mensajeParameter, fechaParameter, iDUsuarioParameter, iDNoticiaParameter);
        }
    
        public virtual int insertEjercicios(string descripcion, Nullable<int> repeticiones, Nullable<int> duracion, Nullable<int> series)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var repeticionesParameter = repeticiones.HasValue ?
                new ObjectParameter("repeticiones", repeticiones) :
                new ObjectParameter("repeticiones", typeof(int));
    
            var duracionParameter = duracion.HasValue ?
                new ObjectParameter("duracion", duracion) :
                new ObjectParameter("duracion", typeof(int));
    
            var seriesParameter = series.HasValue ?
                new ObjectParameter("series", series) :
                new ObjectParameter("series", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertEjercicios", descripcionParameter, repeticionesParameter, duracionParameter, seriesParameter);
        }
    
        public virtual int insertEventos(string nombre, string descripcion, Nullable<System.DateTime> fechaRealizacion, Nullable<System.DateTime> fechaPublicacion, Nullable<int> costo, byte[] imagen)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var fechaRealizacionParameter = fechaRealizacion.HasValue ?
                new ObjectParameter("fechaRealizacion", fechaRealizacion) :
                new ObjectParameter("fechaRealizacion", typeof(System.DateTime));
    
            var fechaPublicacionParameter = fechaPublicacion.HasValue ?
                new ObjectParameter("fechaPublicacion", fechaPublicacion) :
                new ObjectParameter("fechaPublicacion", typeof(System.DateTime));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertEventos", nombreParameter, descripcionParameter, fechaRealizacionParameter, fechaPublicacionParameter, costoParameter, imagenParameter);
        }
    
        public virtual int insertHistorialMedico(Nullable<bool> alcohol, Nullable<bool> fumado, Nullable<bool> hipertension, Nullable<bool> diabetes, string medicamentos, string fracturas, string cirugias, string alergias, string problemasArticulares, string otras, Nullable<int> iDUsuario)
        {
            var alcoholParameter = alcohol.HasValue ?
                new ObjectParameter("alcohol", alcohol) :
                new ObjectParameter("alcohol", typeof(bool));
    
            var fumadoParameter = fumado.HasValue ?
                new ObjectParameter("fumado", fumado) :
                new ObjectParameter("fumado", typeof(bool));
    
            var hipertensionParameter = hipertension.HasValue ?
                new ObjectParameter("hipertension", hipertension) :
                new ObjectParameter("hipertension", typeof(bool));
    
            var diabetesParameter = diabetes.HasValue ?
                new ObjectParameter("diabetes", diabetes) :
                new ObjectParameter("diabetes", typeof(bool));
    
            var medicamentosParameter = medicamentos != null ?
                new ObjectParameter("medicamentos", medicamentos) :
                new ObjectParameter("medicamentos", typeof(string));
    
            var fracturasParameter = fracturas != null ?
                new ObjectParameter("fracturas", fracturas) :
                new ObjectParameter("fracturas", typeof(string));
    
            var cirugiasParameter = cirugias != null ?
                new ObjectParameter("cirugias", cirugias) :
                new ObjectParameter("cirugias", typeof(string));
    
            var alergiasParameter = alergias != null ?
                new ObjectParameter("alergias", alergias) :
                new ObjectParameter("alergias", typeof(string));
    
            var problemasArticularesParameter = problemasArticulares != null ?
                new ObjectParameter("problemasArticulares", problemasArticulares) :
                new ObjectParameter("problemasArticulares", typeof(string));
    
            var otrasParameter = otras != null ?
                new ObjectParameter("otras", otras) :
                new ObjectParameter("otras", typeof(string));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertHistorialMedico", alcoholParameter, fumadoParameter, hipertensionParameter, diabetesParameter, medicamentosParameter, fracturasParameter, cirugiasParameter, alergiasParameter, problemasArticularesParameter, otrasParameter, iDUsuarioParameter);
        }
    
        public virtual int insertHorarios(Nullable<int> iDUsuario)
        {
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertHorarios", iDUsuarioParameter);
        }
    
        public virtual int insertMedidas(Nullable<int> edad, Nullable<double> pesoLB, Nullable<double> pesoKg, Nullable<double> estatura, Nullable<double> imc, Nullable<double> diametroHumero, Nullable<double> diametroFemur, Nullable<double> pesoMuscular, Nullable<double> pesoResidual, Nullable<double> pesoGrasa, Nullable<double> pesoOseo, Nullable<double> porcentajeGrasa, Nullable<double> pesoLibreGrasa, Nullable<double> circunferenciaTorax, Nullable<double> circuferenciaBrazo, Nullable<double> circunferenciaAntebrazo, Nullable<double> circuferenciaCintura, Nullable<double> circunferenciaCadera, Nullable<double> circunferenciaMuslo, Nullable<double> circunferenciaPierna, Nullable<System.DateTime> fecha, Nullable<int> iDUsuario, Nullable<int> iDEvaluador)
        {
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var pesoLBParameter = pesoLB.HasValue ?
                new ObjectParameter("pesoLB", pesoLB) :
                new ObjectParameter("pesoLB", typeof(double));
    
            var pesoKgParameter = pesoKg.HasValue ?
                new ObjectParameter("pesoKg", pesoKg) :
                new ObjectParameter("pesoKg", typeof(double));
    
            var estaturaParameter = estatura.HasValue ?
                new ObjectParameter("estatura", estatura) :
                new ObjectParameter("estatura", typeof(double));
    
            var imcParameter = imc.HasValue ?
                new ObjectParameter("imc", imc) :
                new ObjectParameter("imc", typeof(double));
    
            var diametroHumeroParameter = diametroHumero.HasValue ?
                new ObjectParameter("diametroHumero", diametroHumero) :
                new ObjectParameter("diametroHumero", typeof(double));
    
            var diametroFemurParameter = diametroFemur.HasValue ?
                new ObjectParameter("diametroFemur", diametroFemur) :
                new ObjectParameter("diametroFemur", typeof(double));
    
            var pesoMuscularParameter = pesoMuscular.HasValue ?
                new ObjectParameter("pesoMuscular", pesoMuscular) :
                new ObjectParameter("pesoMuscular", typeof(double));
    
            var pesoResidualParameter = pesoResidual.HasValue ?
                new ObjectParameter("pesoResidual", pesoResidual) :
                new ObjectParameter("pesoResidual", typeof(double));
    
            var pesoGrasaParameter = pesoGrasa.HasValue ?
                new ObjectParameter("pesoGrasa", pesoGrasa) :
                new ObjectParameter("pesoGrasa", typeof(double));
    
            var pesoOseoParameter = pesoOseo.HasValue ?
                new ObjectParameter("pesoOseo", pesoOseo) :
                new ObjectParameter("pesoOseo", typeof(double));
    
            var porcentajeGrasaParameter = porcentajeGrasa.HasValue ?
                new ObjectParameter("porcentajeGrasa", porcentajeGrasa) :
                new ObjectParameter("porcentajeGrasa", typeof(double));
    
            var pesoLibreGrasaParameter = pesoLibreGrasa.HasValue ?
                new ObjectParameter("pesoLibreGrasa", pesoLibreGrasa) :
                new ObjectParameter("pesoLibreGrasa", typeof(double));
    
            var circunferenciaToraxParameter = circunferenciaTorax.HasValue ?
                new ObjectParameter("circunferenciaTorax", circunferenciaTorax) :
                new ObjectParameter("circunferenciaTorax", typeof(double));
    
            var circuferenciaBrazoParameter = circuferenciaBrazo.HasValue ?
                new ObjectParameter("circuferenciaBrazo", circuferenciaBrazo) :
                new ObjectParameter("circuferenciaBrazo", typeof(double));
    
            var circunferenciaAntebrazoParameter = circunferenciaAntebrazo.HasValue ?
                new ObjectParameter("circunferenciaAntebrazo", circunferenciaAntebrazo) :
                new ObjectParameter("circunferenciaAntebrazo", typeof(double));
    
            var circuferenciaCinturaParameter = circuferenciaCintura.HasValue ?
                new ObjectParameter("circuferenciaCintura", circuferenciaCintura) :
                new ObjectParameter("circuferenciaCintura", typeof(double));
    
            var circunferenciaCaderaParameter = circunferenciaCadera.HasValue ?
                new ObjectParameter("circunferenciaCadera", circunferenciaCadera) :
                new ObjectParameter("circunferenciaCadera", typeof(double));
    
            var circunferenciaMusloParameter = circunferenciaMuslo.HasValue ?
                new ObjectParameter("circunferenciaMuslo", circunferenciaMuslo) :
                new ObjectParameter("circunferenciaMuslo", typeof(double));
    
            var circunferenciaPiernaParameter = circunferenciaPierna.HasValue ?
                new ObjectParameter("circunferenciaPierna", circunferenciaPierna) :
                new ObjectParameter("circunferenciaPierna", typeof(double));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDEvaluadorParameter = iDEvaluador.HasValue ?
                new ObjectParameter("IDEvaluador", iDEvaluador) :
                new ObjectParameter("IDEvaluador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertMedidas", edadParameter, pesoLBParameter, pesoKgParameter, estaturaParameter, imcParameter, diametroHumeroParameter, diametroFemurParameter, pesoMuscularParameter, pesoResidualParameter, pesoGrasaParameter, pesoOseoParameter, porcentajeGrasaParameter, pesoLibreGrasaParameter, circunferenciaToraxParameter, circuferenciaBrazoParameter, circunferenciaAntebrazoParameter, circuferenciaCinturaParameter, circunferenciaCaderaParameter, circunferenciaMusloParameter, circunferenciaPiernaParameter, fechaParameter, iDUsuarioParameter, iDEvaluadorParameter);
        }
    
        public virtual int insertMensaje(string mensaje, Nullable<int> iDReceptor, Nullable<int> iDEmisor)
        {
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(string));
    
            var iDReceptorParameter = iDReceptor.HasValue ?
                new ObjectParameter("IDReceptor", iDReceptor) :
                new ObjectParameter("IDReceptor", typeof(int));
    
            var iDEmisorParameter = iDEmisor.HasValue ?
                new ObjectParameter("IDEmisor", iDEmisor) :
                new ObjectParameter("IDEmisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertMensaje", mensajeParameter, iDReceptorParameter, iDEmisorParameter);
        }
    
        public virtual int insertNoticias(string titulo, string contenido, Nullable<System.DateTime> fechaRealizacion, byte[] imagen)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var contenidoParameter = contenido != null ?
                new ObjectParameter("contenido", contenido) :
                new ObjectParameter("contenido", typeof(string));
    
            var fechaRealizacionParameter = fechaRealizacion.HasValue ?
                new ObjectParameter("fechaRealizacion", fechaRealizacion) :
                new ObjectParameter("fechaRealizacion", typeof(System.DateTime));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertNoticias", tituloParameter, contenidoParameter, fechaRealizacionParameter, imagenParameter);
        }
    
        public virtual int insertNotificaciones(string titulo, string mensaje)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertNotificaciones", tituloParameter, mensajeParameter);
        }
    
        public virtual int insertOfertas(string titulo, string descripcion, Nullable<int> porcentaje, Nullable<int> monto, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, byte[] imagen)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("porcentaje", porcentaje) :
                new ObjectParameter("porcentaje", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertOfertas", tituloParameter, descripcionParameter, porcentajeParameter, montoParameter, fechaInicioParameter, fechaFinParameter, imagenParameter);
        }
    
        public virtual int insertPagosRealizados(Nullable<int> monto, Nullable<System.DateTime> fecha, Nullable<bool> descuento, Nullable<int> montoDescuento, Nullable<int> iDUsuario)
        {
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(bool));
    
            var montoDescuentoParameter = montoDescuento.HasValue ?
                new ObjectParameter("montoDescuento", montoDescuento) :
                new ObjectParameter("montoDescuento", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertPagosRealizados", montoParameter, fechaParameter, descuentoParameter, montoDescuentoParameter, iDUsuarioParameter);
        }
    
        public virtual int insertPlieguesHombres(Nullable<double> plieguesPecho, Nullable<double> plieguesSubEscapular, Nullable<double> plieguesAbdomen, Nullable<double> plieguesMuslo, Nullable<int> iDMedidas)
        {
            var plieguesPechoParameter = plieguesPecho.HasValue ?
                new ObjectParameter("plieguesPecho", plieguesPecho) :
                new ObjectParameter("plieguesPecho", typeof(double));
    
            var plieguesSubEscapularParameter = plieguesSubEscapular.HasValue ?
                new ObjectParameter("plieguesSubEscapular", plieguesSubEscapular) :
                new ObjectParameter("plieguesSubEscapular", typeof(double));
    
            var plieguesAbdomenParameter = plieguesAbdomen.HasValue ?
                new ObjectParameter("plieguesAbdomen", plieguesAbdomen) :
                new ObjectParameter("plieguesAbdomen", typeof(double));
    
            var plieguesMusloParameter = plieguesMuslo.HasValue ?
                new ObjectParameter("plieguesMuslo", plieguesMuslo) :
                new ObjectParameter("plieguesMuslo", typeof(double));
    
            var iDMedidasParameter = iDMedidas.HasValue ?
                new ObjectParameter("IDMedidas", iDMedidas) :
                new ObjectParameter("IDMedidas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertPlieguesHombres", plieguesPechoParameter, plieguesSubEscapularParameter, plieguesAbdomenParameter, plieguesMusloParameter, iDMedidasParameter);
        }
    
        public virtual int insertPlieguesMujeres(Nullable<double> plieguesSubEscapular, Nullable<double> plieguesTriceps, Nullable<double> plieguesSubPrailiaco, Nullable<double> plieguesMuslo, Nullable<int> iDMedidas)
        {
            var plieguesSubEscapularParameter = plieguesSubEscapular.HasValue ?
                new ObjectParameter("plieguesSubEscapular", plieguesSubEscapular) :
                new ObjectParameter("plieguesSubEscapular", typeof(double));
    
            var plieguesTricepsParameter = plieguesTriceps.HasValue ?
                new ObjectParameter("plieguesTriceps", plieguesTriceps) :
                new ObjectParameter("plieguesTriceps", typeof(double));
    
            var plieguesSubPrailiacoParameter = plieguesSubPrailiaco.HasValue ?
                new ObjectParameter("plieguesSubPrailiaco", plieguesSubPrailiaco) :
                new ObjectParameter("plieguesSubPrailiaco", typeof(double));
    
            var plieguesMusloParameter = plieguesMuslo.HasValue ?
                new ObjectParameter("plieguesMuslo", plieguesMuslo) :
                new ObjectParameter("plieguesMuslo", typeof(double));
    
            var iDMedidasParameter = iDMedidas.HasValue ?
                new ObjectParameter("IDMedidas", iDMedidas) :
                new ObjectParameter("IDMedidas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertPlieguesMujeres", plieguesSubEscapularParameter, plieguesTricepsParameter, plieguesSubPrailiacoParameter, plieguesMusloParameter, iDMedidasParameter);
        }
    
        public virtual int insertreferenciaHorarios_referenciaClases(Nullable<int> iDHorario, Nullable<int> iDClase)
        {
            var iDHorarioParameter = iDHorario.HasValue ?
                new ObjectParameter("IDHorario", iDHorario) :
                new ObjectParameter("IDHorario", typeof(int));
    
            var iDClaseParameter = iDClase.HasValue ?
                new ObjectParameter("IDClase", iDClase) :
                new ObjectParameter("IDClase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertreferenciaHorarios_referenciaClases", iDHorarioParameter, iDClaseParameter);
        }
    
        public virtual int insertreferenciaRutinas_referenciaEjercicios(Nullable<int> iDRutina, Nullable<int> iDEjercicio)
        {
            var iDRutinaParameter = iDRutina.HasValue ?
                new ObjectParameter("IDRutina", iDRutina) :
                new ObjectParameter("IDRutina", typeof(int));
    
            var iDEjercicioParameter = iDEjercicio.HasValue ?
                new ObjectParameter("IDEjercicio", iDEjercicio) :
                new ObjectParameter("IDEjercicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertreferenciaRutinas_referenciaEjercicios", iDRutinaParameter, iDEjercicioParameter);
        }
    
        public virtual int insertreferenciaUsuarios_referenciaEventos(Nullable<int> iDUsuario, Nullable<int> iDEvento)
        {
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDEventoParameter = iDEvento.HasValue ?
                new ObjectParameter("IDEvento", iDEvento) :
                new ObjectParameter("IDEvento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertreferenciaUsuarios_referenciaEventos", iDUsuarioParameter, iDEventoParameter);
        }
    
        public virtual int insertreferenciaUsuarios_referenciaNotificaciones(Nullable<int> iDUsuario, Nullable<int> iDNotificacion)
        {
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDNotificacionParameter = iDNotificacion.HasValue ?
                new ObjectParameter("IDNotificacion", iDNotificacion) :
                new ObjectParameter("IDNotificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertreferenciaUsuarios_referenciaNotificaciones", iDUsuarioParameter, iDNotificacionParameter);
        }
    
        public virtual int insertreferenciaUsuarios_referenciaOfertas(Nullable<int> iDUsuario, Nullable<int> iDOferta)
        {
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDOfertaParameter = iDOferta.HasValue ?
                new ObjectParameter("IDOferta", iDOferta) :
                new ObjectParameter("IDOferta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertreferenciaUsuarios_referenciaOfertas", iDUsuarioParameter, iDOfertaParameter);
        }
    
        public virtual int insertRutinas(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertRutinas", nombreParameter);
        }
    
        public virtual int insertUsuarios(Nullable<int> cedula, string nombre, string apellido1, string apellido2, string correo, string contrasena, string tipo, string sexo, Nullable<int> telefono1, Nullable<int> telefono2, string ocupacion, string estadoCivil, Nullable<bool> habilitado, Nullable<System.DateTime> fechaIngreso, Nullable<System.DateTime> fechaPago, Nullable<int> iDRutina)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("apellido1", apellido1) :
                new ObjectParameter("apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("apellido2", apellido2) :
                new ObjectParameter("apellido2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var telefono1Parameter = telefono1.HasValue ?
                new ObjectParameter("telefono1", telefono1) :
                new ObjectParameter("telefono1", typeof(int));
    
            var telefono2Parameter = telefono2.HasValue ?
                new ObjectParameter("telefono2", telefono2) :
                new ObjectParameter("telefono2", typeof(int));
    
            var ocupacionParameter = ocupacion != null ?
                new ObjectParameter("ocupacion", ocupacion) :
                new ObjectParameter("ocupacion", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("estadoCivil", estadoCivil) :
                new ObjectParameter("estadoCivil", typeof(string));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("habilitado", habilitado) :
                new ObjectParameter("habilitado", typeof(bool));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("fechaIngreso", fechaIngreso) :
                new ObjectParameter("fechaIngreso", typeof(System.DateTime));
    
            var fechaPagoParameter = fechaPago.HasValue ?
                new ObjectParameter("fechaPago", fechaPago) :
                new ObjectParameter("fechaPago", typeof(System.DateTime));
    
            var iDRutinaParameter = iDRutina.HasValue ?
                new ObjectParameter("IDRutina", iDRutina) :
                new ObjectParameter("IDRutina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertUsuarios", cedulaParameter, nombreParameter, apellido1Parameter, apellido2Parameter, correoParameter, contrasenaParameter, tipoParameter, sexoParameter, telefono1Parameter, telefono2Parameter, ocupacionParameter, estadoCivilParameter, habilitadoParameter, fechaIngresoParameter, fechaPagoParameter, iDRutinaParameter);
        }
    
        public virtual int updateClases(Nullable<int> iD, string nombre, string dia, Nullable<System.DateTime> horaInicio, Nullable<System.DateTime> horaFin)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var diaParameter = dia != null ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(string));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("horaInicio", horaInicio) :
                new ObjectParameter("horaInicio", typeof(System.DateTime));
    
            var horaFinParameter = horaFin.HasValue ?
                new ObjectParameter("horaFin", horaFin) :
                new ObjectParameter("horaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateClases", iDParameter, nombreParameter, diaParameter, horaInicioParameter, horaFinParameter);
        }
    
        public virtual int updateComentariosEventos(Nullable<int> iD, string mensaje, Nullable<System.DateTime> fecha, Nullable<int> iDUsuario, Nullable<int> iDEvento)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDEventoParameter = iDEvento.HasValue ?
                new ObjectParameter("IDEvento", iDEvento) :
                new ObjectParameter("IDEvento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateComentariosEventos", iDParameter, mensajeParameter, fechaParameter, iDUsuarioParameter, iDEventoParameter);
        }
    
        public virtual int updateComentariosNoticias(Nullable<int> iD, string mensaje, Nullable<System.DateTime> fecha, Nullable<int> iDUsuario, Nullable<int> iDNoticia)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDNoticiaParameter = iDNoticia.HasValue ?
                new ObjectParameter("IDNoticia", iDNoticia) :
                new ObjectParameter("IDNoticia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateComentariosNoticias", iDParameter, mensajeParameter, fechaParameter, iDUsuarioParameter, iDNoticiaParameter);
        }
    
        public virtual int updateEjercicios(Nullable<int> iD, string descripcion, Nullable<int> repeticiones, Nullable<int> duracion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var repeticionesParameter = repeticiones.HasValue ?
                new ObjectParameter("repeticiones", repeticiones) :
                new ObjectParameter("repeticiones", typeof(int));
    
            var duracionParameter = duracion.HasValue ?
                new ObjectParameter("duracion", duracion) :
                new ObjectParameter("duracion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEjercicios", iDParameter, descripcionParameter, repeticionesParameter, duracionParameter);
        }
    
        public virtual int updateEventos(Nullable<int> iD, string nombre, string descripcion, Nullable<System.DateTime> fechaRealizacion, Nullable<System.DateTime> fechaPublicacion, Nullable<int> costo, byte[] imagen)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var fechaRealizacionParameter = fechaRealizacion.HasValue ?
                new ObjectParameter("fechaRealizacion", fechaRealizacion) :
                new ObjectParameter("fechaRealizacion", typeof(System.DateTime));
    
            var fechaPublicacionParameter = fechaPublicacion.HasValue ?
                new ObjectParameter("fechaPublicacion", fechaPublicacion) :
                new ObjectParameter("fechaPublicacion", typeof(System.DateTime));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEventos", iDParameter, nombreParameter, descripcionParameter, fechaRealizacionParameter, fechaPublicacionParameter, costoParameter, imagenParameter);
        }
    
        public virtual int updateHistorialMedico(Nullable<int> iD, Nullable<bool> alcohol, Nullable<bool> fumado, Nullable<bool> hipertension, Nullable<bool> diabetes, string medicamentos, string fracturas, string cirugias, string alergias, string problemasArticulares, string otras, Nullable<int> iDUsuario)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var alcoholParameter = alcohol.HasValue ?
                new ObjectParameter("alcohol", alcohol) :
                new ObjectParameter("alcohol", typeof(bool));
    
            var fumadoParameter = fumado.HasValue ?
                new ObjectParameter("fumado", fumado) :
                new ObjectParameter("fumado", typeof(bool));
    
            var hipertensionParameter = hipertension.HasValue ?
                new ObjectParameter("hipertension", hipertension) :
                new ObjectParameter("hipertension", typeof(bool));
    
            var diabetesParameter = diabetes.HasValue ?
                new ObjectParameter("diabetes", diabetes) :
                new ObjectParameter("diabetes", typeof(bool));
    
            var medicamentosParameter = medicamentos != null ?
                new ObjectParameter("medicamentos", medicamentos) :
                new ObjectParameter("medicamentos", typeof(string));
    
            var fracturasParameter = fracturas != null ?
                new ObjectParameter("fracturas", fracturas) :
                new ObjectParameter("fracturas", typeof(string));
    
            var cirugiasParameter = cirugias != null ?
                new ObjectParameter("cirugias", cirugias) :
                new ObjectParameter("cirugias", typeof(string));
    
            var alergiasParameter = alergias != null ?
                new ObjectParameter("alergias", alergias) :
                new ObjectParameter("alergias", typeof(string));
    
            var problemasArticularesParameter = problemasArticulares != null ?
                new ObjectParameter("problemasArticulares", problemasArticulares) :
                new ObjectParameter("problemasArticulares", typeof(string));
    
            var otrasParameter = otras != null ?
                new ObjectParameter("otras", otras) :
                new ObjectParameter("otras", typeof(string));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateHistorialMedico", iDParameter, alcoholParameter, fumadoParameter, hipertensionParameter, diabetesParameter, medicamentosParameter, fracturasParameter, cirugiasParameter, alergiasParameter, problemasArticularesParameter, otrasParameter, iDUsuarioParameter);
        }
    
        public virtual int updateHorarios(Nullable<int> iD, Nullable<int> iDUsuario)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateHorarios", iDParameter, iDUsuarioParameter);
        }
    
        public virtual int updateMedidas(Nullable<int> iD, Nullable<int> edad, Nullable<double> pesoLB, Nullable<double> pesoKg, Nullable<double> estatura, Nullable<double> imc, Nullable<double> diametroHumero, Nullable<double> diametroFemur, Nullable<double> pesoMuscular, Nullable<double> pesoResidual, Nullable<double> pesoGrasa, Nullable<double> pesoOseo, Nullable<double> porcentajeGrasa, Nullable<double> pesoLibreGrasa, Nullable<double> circunferenciaTorax, Nullable<double> circuferenciaBrazo, Nullable<double> circunferenciaAntebrazo, Nullable<double> circuferenciaCintura, Nullable<double> circunferenciaCadera, Nullable<double> circunferenciaMuslo, Nullable<double> circunferenciaPierna, Nullable<System.DateTime> fecha, Nullable<int> iDUsuario, Nullable<int> iDEvaluador)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var pesoLBParameter = pesoLB.HasValue ?
                new ObjectParameter("pesoLB", pesoLB) :
                new ObjectParameter("pesoLB", typeof(double));
    
            var pesoKgParameter = pesoKg.HasValue ?
                new ObjectParameter("pesoKg", pesoKg) :
                new ObjectParameter("pesoKg", typeof(double));
    
            var estaturaParameter = estatura.HasValue ?
                new ObjectParameter("estatura", estatura) :
                new ObjectParameter("estatura", typeof(double));
    
            var imcParameter = imc.HasValue ?
                new ObjectParameter("imc", imc) :
                new ObjectParameter("imc", typeof(double));
    
            var diametroHumeroParameter = diametroHumero.HasValue ?
                new ObjectParameter("diametroHumero", diametroHumero) :
                new ObjectParameter("diametroHumero", typeof(double));
    
            var diametroFemurParameter = diametroFemur.HasValue ?
                new ObjectParameter("diametroFemur", diametroFemur) :
                new ObjectParameter("diametroFemur", typeof(double));
    
            var pesoMuscularParameter = pesoMuscular.HasValue ?
                new ObjectParameter("pesoMuscular", pesoMuscular) :
                new ObjectParameter("pesoMuscular", typeof(double));
    
            var pesoResidualParameter = pesoResidual.HasValue ?
                new ObjectParameter("pesoResidual", pesoResidual) :
                new ObjectParameter("pesoResidual", typeof(double));
    
            var pesoGrasaParameter = pesoGrasa.HasValue ?
                new ObjectParameter("pesoGrasa", pesoGrasa) :
                new ObjectParameter("pesoGrasa", typeof(double));
    
            var pesoOseoParameter = pesoOseo.HasValue ?
                new ObjectParameter("pesoOseo", pesoOseo) :
                new ObjectParameter("pesoOseo", typeof(double));
    
            var porcentajeGrasaParameter = porcentajeGrasa.HasValue ?
                new ObjectParameter("porcentajeGrasa", porcentajeGrasa) :
                new ObjectParameter("porcentajeGrasa", typeof(double));
    
            var pesoLibreGrasaParameter = pesoLibreGrasa.HasValue ?
                new ObjectParameter("pesoLibreGrasa", pesoLibreGrasa) :
                new ObjectParameter("pesoLibreGrasa", typeof(double));
    
            var circunferenciaToraxParameter = circunferenciaTorax.HasValue ?
                new ObjectParameter("circunferenciaTorax", circunferenciaTorax) :
                new ObjectParameter("circunferenciaTorax", typeof(double));
    
            var circuferenciaBrazoParameter = circuferenciaBrazo.HasValue ?
                new ObjectParameter("circuferenciaBrazo", circuferenciaBrazo) :
                new ObjectParameter("circuferenciaBrazo", typeof(double));
    
            var circunferenciaAntebrazoParameter = circunferenciaAntebrazo.HasValue ?
                new ObjectParameter("circunferenciaAntebrazo", circunferenciaAntebrazo) :
                new ObjectParameter("circunferenciaAntebrazo", typeof(double));
    
            var circuferenciaCinturaParameter = circuferenciaCintura.HasValue ?
                new ObjectParameter("circuferenciaCintura", circuferenciaCintura) :
                new ObjectParameter("circuferenciaCintura", typeof(double));
    
            var circunferenciaCaderaParameter = circunferenciaCadera.HasValue ?
                new ObjectParameter("circunferenciaCadera", circunferenciaCadera) :
                new ObjectParameter("circunferenciaCadera", typeof(double));
    
            var circunferenciaMusloParameter = circunferenciaMuslo.HasValue ?
                new ObjectParameter("circunferenciaMuslo", circunferenciaMuslo) :
                new ObjectParameter("circunferenciaMuslo", typeof(double));
    
            var circunferenciaPiernaParameter = circunferenciaPierna.HasValue ?
                new ObjectParameter("circunferenciaPierna", circunferenciaPierna) :
                new ObjectParameter("circunferenciaPierna", typeof(double));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDEvaluadorParameter = iDEvaluador.HasValue ?
                new ObjectParameter("IDEvaluador", iDEvaluador) :
                new ObjectParameter("IDEvaluador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateMedidas", iDParameter, edadParameter, pesoLBParameter, pesoKgParameter, estaturaParameter, imcParameter, diametroHumeroParameter, diametroFemurParameter, pesoMuscularParameter, pesoResidualParameter, pesoGrasaParameter, pesoOseoParameter, porcentajeGrasaParameter, pesoLibreGrasaParameter, circunferenciaToraxParameter, circuferenciaBrazoParameter, circunferenciaAntebrazoParameter, circuferenciaCinturaParameter, circunferenciaCaderaParameter, circunferenciaMusloParameter, circunferenciaPiernaParameter, fechaParameter, iDUsuarioParameter, iDEvaluadorParameter);
        }
    
        public virtual int updateMensaje(Nullable<int> iD, string mensaje, Nullable<int> iDReceptor, Nullable<int> iDEmisor)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(string));
    
            var iDReceptorParameter = iDReceptor.HasValue ?
                new ObjectParameter("IDReceptor", iDReceptor) :
                new ObjectParameter("IDReceptor", typeof(int));
    
            var iDEmisorParameter = iDEmisor.HasValue ?
                new ObjectParameter("IDEmisor", iDEmisor) :
                new ObjectParameter("IDEmisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateMensaje", iDParameter, mensajeParameter, iDReceptorParameter, iDEmisorParameter);
        }
    
        public virtual int updateNoticias(Nullable<int> iD, string titulo, string contenido, Nullable<System.DateTime> fechaRealizacion, byte[] imagen)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var contenidoParameter = contenido != null ?
                new ObjectParameter("contenido", contenido) :
                new ObjectParameter("contenido", typeof(string));
    
            var fechaRealizacionParameter = fechaRealizacion.HasValue ?
                new ObjectParameter("fechaRealizacion", fechaRealizacion) :
                new ObjectParameter("fechaRealizacion", typeof(System.DateTime));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateNoticias", iDParameter, tituloParameter, contenidoParameter, fechaRealizacionParameter, imagenParameter);
        }
    
        public virtual int updateNotificaciones(Nullable<int> iD, string titulo, string mensaje)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateNotificaciones", iDParameter, tituloParameter, mensajeParameter);
        }
    
        public virtual int updateOfertas(Nullable<int> iD, string titulo, string descripcion, Nullable<int> porcentaje, Nullable<int> monto, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, byte[] imagen)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("porcentaje", porcentaje) :
                new ObjectParameter("porcentaje", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateOfertas", iDParameter, tituloParameter, descripcionParameter, porcentajeParameter, montoParameter, fechaInicioParameter, fechaFinParameter, imagenParameter);
        }
    
        public virtual int updatePagosRealizados(Nullable<int> iD, Nullable<int> monto, Nullable<System.DateTime> fecha, Nullable<bool> descuento, Nullable<int> montoDescuento, Nullable<int> iDUsuario)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(bool));
    
            var montoDescuentoParameter = montoDescuento.HasValue ?
                new ObjectParameter("montoDescuento", montoDescuento) :
                new ObjectParameter("montoDescuento", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePagosRealizados", iDParameter, montoParameter, fechaParameter, descuentoParameter, montoDescuentoParameter, iDUsuarioParameter);
        }
    
        public virtual int updatePlieguesHombres(Nullable<int> iD, Nullable<double> plieguesPecho, Nullable<double> plieguesSubEscapular, Nullable<double> plieguesAbdomen, Nullable<double> plieguesMuslo, Nullable<int> iDMedidas)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var plieguesPechoParameter = plieguesPecho.HasValue ?
                new ObjectParameter("plieguesPecho", plieguesPecho) :
                new ObjectParameter("plieguesPecho", typeof(double));
    
            var plieguesSubEscapularParameter = plieguesSubEscapular.HasValue ?
                new ObjectParameter("plieguesSubEscapular", plieguesSubEscapular) :
                new ObjectParameter("plieguesSubEscapular", typeof(double));
    
            var plieguesAbdomenParameter = plieguesAbdomen.HasValue ?
                new ObjectParameter("plieguesAbdomen", plieguesAbdomen) :
                new ObjectParameter("plieguesAbdomen", typeof(double));
    
            var plieguesMusloParameter = plieguesMuslo.HasValue ?
                new ObjectParameter("plieguesMuslo", plieguesMuslo) :
                new ObjectParameter("plieguesMuslo", typeof(double));
    
            var iDMedidasParameter = iDMedidas.HasValue ?
                new ObjectParameter("IDMedidas", iDMedidas) :
                new ObjectParameter("IDMedidas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePlieguesHombres", iDParameter, plieguesPechoParameter, plieguesSubEscapularParameter, plieguesAbdomenParameter, plieguesMusloParameter, iDMedidasParameter);
        }
    
        public virtual int updatePlieguesMujeres(Nullable<int> iD, Nullable<double> plieguesSubEscapular, Nullable<double> plieguesTriceps, Nullable<double> plieguesSubPrailiaco, Nullable<double> plieguesMuslo, Nullable<int> iDMedidas)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var plieguesSubEscapularParameter = plieguesSubEscapular.HasValue ?
                new ObjectParameter("plieguesSubEscapular", plieguesSubEscapular) :
                new ObjectParameter("plieguesSubEscapular", typeof(double));
    
            var plieguesTricepsParameter = plieguesTriceps.HasValue ?
                new ObjectParameter("plieguesTriceps", plieguesTriceps) :
                new ObjectParameter("plieguesTriceps", typeof(double));
    
            var plieguesSubPrailiacoParameter = plieguesSubPrailiaco.HasValue ?
                new ObjectParameter("plieguesSubPrailiaco", plieguesSubPrailiaco) :
                new ObjectParameter("plieguesSubPrailiaco", typeof(double));
    
            var plieguesMusloParameter = plieguesMuslo.HasValue ?
                new ObjectParameter("plieguesMuslo", plieguesMuslo) :
                new ObjectParameter("plieguesMuslo", typeof(double));
    
            var iDMedidasParameter = iDMedidas.HasValue ?
                new ObjectParameter("IDMedidas", iDMedidas) :
                new ObjectParameter("IDMedidas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePlieguesMujeres", iDParameter, plieguesSubEscapularParameter, plieguesTricepsParameter, plieguesSubPrailiacoParameter, plieguesMusloParameter, iDMedidasParameter);
        }
    
        public virtual int updatereferenciaHorarios_referenciaClases(Nullable<int> iD, Nullable<int> iDHorario, Nullable<int> iDClase)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDHorarioParameter = iDHorario.HasValue ?
                new ObjectParameter("IDHorario", iDHorario) :
                new ObjectParameter("IDHorario", typeof(int));
    
            var iDClaseParameter = iDClase.HasValue ?
                new ObjectParameter("IDClase", iDClase) :
                new ObjectParameter("IDClase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatereferenciaHorarios_referenciaClases", iDParameter, iDHorarioParameter, iDClaseParameter);
        }
    
        public virtual int updatereferenciaRutinas_referenciaEjercicios(Nullable<int> iD, Nullable<int> iDRutina, Nullable<int> iDEjercicio)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDRutinaParameter = iDRutina.HasValue ?
                new ObjectParameter("IDRutina", iDRutina) :
                new ObjectParameter("IDRutina", typeof(int));
    
            var iDEjercicioParameter = iDEjercicio.HasValue ?
                new ObjectParameter("IDEjercicio", iDEjercicio) :
                new ObjectParameter("IDEjercicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatereferenciaRutinas_referenciaEjercicios", iDParameter, iDRutinaParameter, iDEjercicioParameter);
        }
    
        public virtual int updatereferenciaUsuarios_referenciaEventos(Nullable<int> iD, Nullable<int> iDUsuario, Nullable<int> iDEvento)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDEventoParameter = iDEvento.HasValue ?
                new ObjectParameter("IDEvento", iDEvento) :
                new ObjectParameter("IDEvento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatereferenciaUsuarios_referenciaEventos", iDParameter, iDUsuarioParameter, iDEventoParameter);
        }
    
        public virtual int updatereferenciaUsuarios_referenciaNotificaciones(Nullable<int> iD, Nullable<int> iDUsuario, Nullable<int> iDNotificacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDNotificacionParameter = iDNotificacion.HasValue ?
                new ObjectParameter("IDNotificacion", iDNotificacion) :
                new ObjectParameter("IDNotificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatereferenciaUsuarios_referenciaNotificaciones", iDParameter, iDUsuarioParameter, iDNotificacionParameter);
        }
    
        public virtual int updatereferenciaUsuarios_referenciaOfertas(Nullable<int> iD, Nullable<int> iDUsuario, Nullable<int> iDOferta)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDOfertaParameter = iDOferta.HasValue ?
                new ObjectParameter("IDOferta", iDOferta) :
                new ObjectParameter("IDOferta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatereferenciaUsuarios_referenciaOfertas", iDParameter, iDUsuarioParameter, iDOfertaParameter);
        }
    
        public virtual int updateRutinas(Nullable<int> iD, string nombre)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateRutinas", iDParameter, nombreParameter);
        }
    
        public virtual int updateUsuario(Nullable<int> iD, Nullable<int> cedula, string nombre, string apellido1, string apellido2, string correo, string contrasena, string tipo, string sexo, Nullable<int> telefono1, Nullable<int> telefono2, string ocupacion, string estadoCivil, Nullable<bool> habilitado, Nullable<System.DateTime> fechaIngreso, Nullable<System.DateTime> fechaPago, Nullable<int> iDRutina)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("apellido1", apellido1) :
                new ObjectParameter("apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("apellido2", apellido2) :
                new ObjectParameter("apellido2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var telefono1Parameter = telefono1.HasValue ?
                new ObjectParameter("telefono1", telefono1) :
                new ObjectParameter("telefono1", typeof(int));
    
            var telefono2Parameter = telefono2.HasValue ?
                new ObjectParameter("telefono2", telefono2) :
                new ObjectParameter("telefono2", typeof(int));
    
            var ocupacionParameter = ocupacion != null ?
                new ObjectParameter("ocupacion", ocupacion) :
                new ObjectParameter("ocupacion", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("estadoCivil", estadoCivil) :
                new ObjectParameter("estadoCivil", typeof(string));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("habilitado", habilitado) :
                new ObjectParameter("habilitado", typeof(bool));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("fechaIngreso", fechaIngreso) :
                new ObjectParameter("fechaIngreso", typeof(System.DateTime));
    
            var fechaPagoParameter = fechaPago.HasValue ?
                new ObjectParameter("fechaPago", fechaPago) :
                new ObjectParameter("fechaPago", typeof(System.DateTime));
    
            var iDRutinaParameter = iDRutina.HasValue ?
                new ObjectParameter("IDRutina", iDRutina) :
                new ObjectParameter("IDRutina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateUsuario", iDParameter, cedulaParameter, nombreParameter, apellido1Parameter, apellido2Parameter, correoParameter, contrasenaParameter, tipoParameter, sexoParameter, telefono1Parameter, telefono2Parameter, ocupacionParameter, estadoCivilParameter, habilitadoParameter, fechaIngresoParameter, fechaPagoParameter, iDRutinaParameter);
        }
    
        public virtual ObjectResult<verClases_Result> verClases()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verClases_Result>("verClases");
        }
    
        public virtual ObjectResult<verClasesTupla_Result> verClasesTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verClasesTupla_Result>("verClasesTupla", iDParameter);
        }
    
        public virtual ObjectResult<verComentarioEvento_Result> verComentarioEvento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verComentarioEvento_Result>("verComentarioEvento");
        }
    
        public virtual ObjectResult<verComentarioEventoTupla_Result> verComentarioEventoTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verComentarioEventoTupla_Result>("verComentarioEventoTupla", iDParameter);
        }
    
        public virtual ObjectResult<verComentarioNoticia_Result> verComentarioNoticia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verComentarioNoticia_Result>("verComentarioNoticia");
        }
    
        public virtual ObjectResult<verComentarioNoticiaTupla_Result> verComentarioNoticiaTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verComentarioNoticiaTupla_Result>("verComentarioNoticiaTupla", iDParameter);
        }
    
        public virtual ObjectResult<verEjercicios_Result> verEjercicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verEjercicios_Result>("verEjercicios");
        }
    
        public virtual ObjectResult<verEjerciciosTupla_Result> verEjerciciosTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verEjerciciosTupla_Result>("verEjerciciosTupla", iDParameter);
        }
    
        public virtual ObjectResult<verEventos_Result> verEventos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verEventos_Result>("verEventos");
        }
    
        public virtual ObjectResult<verEventosTupla_Result> verEventosTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verEventosTupla_Result>("verEventosTupla", iDParameter);
        }
    
        public virtual ObjectResult<verHistorialMed_Result> verHistorialMed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verHistorialMed_Result>("verHistorialMed");
        }
    
        public virtual ObjectResult<verHistorialMedTupla_Result> verHistorialMedTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verHistorialMedTupla_Result>("verHistorialMedTupla", iDParameter);
        }
    
        public virtual ObjectResult<verHorarios_Result> verHorarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verHorarios_Result>("verHorarios");
        }
    
        public virtual ObjectResult<verHorariosClasesRefe_Result> verHorariosClasesRefe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verHorariosClasesRefe_Result>("verHorariosClasesRefe");
        }
    
        public virtual ObjectResult<verHorariosClasesRefeTupla_Result> verHorariosClasesRefeTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verHorariosClasesRefeTupla_Result>("verHorariosClasesRefeTupla", iDParameter);
        }
    
        public virtual ObjectResult<verHorariosTupla_Result> verHorariosTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verHorariosTupla_Result>("verHorariosTupla", iDParameter);
        }
    
        public virtual ObjectResult<verMedidas_Result> verMedidas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verMedidas_Result>("verMedidas");
        }
    
        public virtual ObjectResult<verMedidasTupla_Result> verMedidasTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verMedidasTupla_Result>("verMedidasTupla", iDParameter);
        }
    
        public virtual ObjectResult<verMensaje_Result> verMensaje()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verMensaje_Result>("verMensaje");
        }
    
        public virtual ObjectResult<verMensajeTupla_Result> verMensajeTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verMensajeTupla_Result>("verMensajeTupla", iDParameter);
        }
    
        public virtual int VerMorosos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VerMorosos");
        }
    
        public virtual ObjectResult<verNoticias_Result> verNoticias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verNoticias_Result>("verNoticias");
        }
    
        public virtual ObjectResult<verNoticiasTupla_Result> verNoticiasTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verNoticiasTupla_Result>("verNoticiasTupla", iDParameter);
        }
    
        public virtual ObjectResult<verNotificaciones_Result> verNotificaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verNotificaciones_Result>("verNotificaciones");
        }
    
        public virtual ObjectResult<verNotificacionesTupla_Result> verNotificacionesTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verNotificacionesTupla_Result>("verNotificacionesTupla", iDParameter);
        }
    
        public virtual ObjectResult<verOfertas_Result> verOfertas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verOfertas_Result>("verOfertas");
        }
    
        public virtual ObjectResult<verOfertasTupla_Result> verOfertasTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verOfertasTupla_Result>("verOfertasTupla", iDParameter);
        }
    
        public virtual ObjectResult<verPagosRe_Result> verPagosRe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verPagosRe_Result>("verPagosRe");
        }
    
        public virtual ObjectResult<verPagosReTupla_Result> verPagosReTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verPagosReTupla_Result>("verPagosReTupla", iDParameter);
        }
    
        public virtual ObjectResult<verPlieguesHombres_Result> verPlieguesHombres()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verPlieguesHombres_Result>("verPlieguesHombres");
        }
    
        public virtual ObjectResult<verPlieguesHombresTupla_Result> verPlieguesHombresTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verPlieguesHombresTupla_Result>("verPlieguesHombresTupla", iDParameter);
        }
    
        public virtual ObjectResult<verPlieguesMujeres_Result> verPlieguesMujeres()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verPlieguesMujeres_Result>("verPlieguesMujeres");
        }
    
        public virtual ObjectResult<verPlieguesMujeresTupla_Result> verPlieguesMujeresTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verPlieguesMujeresTupla_Result>("verPlieguesMujeresTupla", iDParameter);
        }
    
        public virtual ObjectResult<verreferenciaUsuarios_referenciaEventos_Result> verreferenciaUsuarios_referenciaEventos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verreferenciaUsuarios_referenciaEventos_Result>("verreferenciaUsuarios_referenciaEventos");
        }
    
        public virtual ObjectResult<verRutinaEjercicioRefe_Result> verRutinaEjercicioRefe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verRutinaEjercicioRefe_Result>("verRutinaEjercicioRefe");
        }
    
        public virtual ObjectResult<verRutinaEjercicioRefeTupla_Result> verRutinaEjercicioRefeTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verRutinaEjercicioRefeTupla_Result>("verRutinaEjercicioRefeTupla", iDParameter);
        }
    
        public virtual ObjectResult<verRutinas_Result> verRutinas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verRutinas_Result>("verRutinas");
        }
    
        public virtual ObjectResult<verRutinasTupla_Result> verRutinasTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verRutinasTupla_Result>("verRutinasTupla", iDParameter);
        }
    
        public virtual ObjectResult<verTuplareferenciaUsuarios_referenciaEventos_Result> verTuplareferenciaUsuarios_referenciaEventos(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verTuplareferenciaUsuarios_referenciaEventos_Result>("verTuplareferenciaUsuarios_referenciaEventos", iDParameter);
        }
    
        public virtual ObjectResult<verUsuario_Result> verUsuario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verUsuario_Result>("verUsuario");
        }
    
        public virtual ObjectResult<verUsuarioOfertasRefe_Result> verUsuarioOfertasRefe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verUsuarioOfertasRefe_Result>("verUsuarioOfertasRefe");
        }
    
        public virtual ObjectResult<verUsuarioOfertasRefeTupla_Result> verUsuarioOfertasRefeTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verUsuarioOfertasRefeTupla_Result>("verUsuarioOfertasRefeTupla", iDParameter);
        }
    
        public virtual ObjectResult<verUsuariosNotificacionesRefe_Result> verUsuariosNotificacionesRefe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verUsuariosNotificacionesRefe_Result>("verUsuariosNotificacionesRefe");
        }
    
        public virtual ObjectResult<verUsuariosNotificacionesRefeTupla_Result> verUsuariosNotificacionesRefeTupla(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verUsuariosNotificacionesRefeTupla_Result>("verUsuariosNotificacionesRefeTupla", iDParameter);
        }
    
        public virtual ObjectResult<verUsuarioTupla_Result> verUsuarioTupla(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verUsuarioTupla_Result>("verUsuarioTupla", cedulaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BuscarCedulaxCorreo(string correo)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BuscarCedulaxCorreo", correoParameter);
        }
    }
}
